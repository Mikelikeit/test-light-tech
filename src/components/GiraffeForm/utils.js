export const validateFields = fields => {
    return Object.entries(fields).reduce((errors, [name, value]) => {
        // –≤–∞–ª–∏–¥–∞—Ü–∏—è
        let error;
        // –≤—Å–µ –ø–æ–ª—è –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã
        if (!value) {
            error = '–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ–µ –ø–æ–ª–µ';
        }
        switch (name) {
            case 'weight': {
                const weight = Number(value);
                if (weight <= 0 || weight >= 10000) {
                    error = '–í–µ—Å –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –≤ –¥–∏–∞–ø–∞–∑–æ–Ω–µ –æ—Ç 0 –¥–æ 10000';
                }
                if (weight === 300) {
                    error = '–û—Ç—Å–æ—Å–∏ —É üöú';
                }
                break;
            }
            default:
        }
        if (error) {
            return {
                ...errors,
                [name]: error
            }
        }
        return errors;
    }, {});
};

// –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Ñ–æ—Ä–º—ã —Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∏—Ä—É–µ—Ç –ø–æ–ª—è —Ñ–æ—Ä–º—ã –≤ –Ω—É–∂–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç.
export const transformFieldsToGiraffe = fields => {
    return Object.entries(fields).reduce((errors, [fieldName, formValue]) => {
        let value;
        switch (fieldName) {
            case 'weight':
                value = Number(formValue);
                break;
            case 'sex':
                value = { male: '–ú', female: '–ñ' }[formValue];
                break;
            default:
                value = formValue;
        }
        return {
            ...errors,
            [fieldName]: value
        }
    }, {});
};